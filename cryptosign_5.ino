#define FIRMWARE_VERSION "cryptosignv1"
#define MAXCOINS 8

String coinArguments[10] = {"strong", "fantom", "spiritswap", "comb-finance", "tomb", "safeinsure", "pocket-network", "terra-luna", "", ""};
String coinTickers[10] = {"$STRONG", "$FANTOM", "$SPIRIT", "$COMB", "$TOMB", "$SINS", "$POKT", "$LUNA", "", ""};

uint16_t static coin1[] = {
  0x001D, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0017,   // 0x0010 (16) pixels
  0x0003, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001D, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0020 (32) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x0009, 0x0000, 0x0000, 0x0000, 0x0000, 0x001E, 0x001F, 0x001F, 0x001F,   // 0x0030 (48) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x0011, 0x0001,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0050 (80) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0018, 0x0004, 0x0000, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x000A, 0x0006, 0x0007,   // 0x0060 (96) pixels
  0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000D, 0x000C, 0x000B, 0x0002, 0x001E, 0x001F,   // 0x0070 (112) pixels
  0x001F, 0x001F, 0x001F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0080 (128) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0090 (144) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0001,   // 0x00A0 (160) pixels
  0x0000, 0x0004, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017, 0x0017,   // 0x00B0 (176) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0001, 0x0000, 0x0005, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x00C0 (192) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0001, 0x0000, 0x0003, 0x0011, 0x0011,   // 0x00D0 (208) pixels
  0x0011, 0x0011, 0x0011, 0x0011, 0x000E, 0x000D, 0x000D, 0x001B, 0x001F, 0x001F, 0x001F, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x00E0 (224) pixels
  0x001F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0013, 0x001F, 0x001F,   // 0x00F0 (240) pixels
  0x001F, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0003, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0100 (256) pixels
  0x0000, 0x0000, 0x0000, 0x0013, 0x001F, 0x001F, 0x001F, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0013, 0x0010, 0x0010,   // 0x0110 (272) pixels
  0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0003, 0x0000, 0x0000, 0x0016, 0x001F, 0x001F, 0x001F, 0x001E, 0x001F, 0x001F,   // 0x0120 (288) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0006, 0x0000, 0x0000, 0x0019,   // 0x0130 (304) pixels
  0x001F, 0x001F, 0x001F, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0140 (320) pixels
  0x001F, 0x001F, 0x0006, 0x0000, 0x0000, 0x0019, 0x001F, 0x001F, 0x001F, 0x001D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0150 (336) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0013, 0x001F, 0x001F, 0x001F, 0x001D,   // 0x0160 (352) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0170 (368) pixels
  0x0000, 0x0014, 0x001F, 0x001F, 0x001F, 0x001D, 0x0000, 0x0002, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003,   // 0x0180 (384) pixels
  0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x001A, 0x001F, 0x001F, 0x001F, 0x001D, 0x0000, 0x0001, 0x000A, 0x001C,   // 0x0190 (400) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x01A0 (416) pixels
  0x001F, 0x001D, 0x0000, 0x0000, 0x0000, 0x0005, 0x0017, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x01B0 (432) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x000F, 0x001E, 0x001F,   // 0x01C0 (448) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};


uint16_t static coin2[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x000D, 0x0016, 0x001C, 0x001F, 0x001F, 0x001C, 0x0016, 0x000D, 0x0002,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x000E, 0x001C, 0x001E, 0x001F, 0x001F,   // 0x0020 (32) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x001C, 0x0010, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0003,   // 0x0030 (48) pixels
  0x0017, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x0019, 0x0005, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0003, 0x001A, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0050 (80) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001B, 0x0005, 0x0000, 0x0000, 0x0000, 0x0001, 0x0017, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0060 (96) pixels
  0x001F, 0x10BF, 0x845F, 0x8C7F, 0x18DF, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0019, 0x0002, 0x0000, 0x0000, 0x000E,   // 0x0070 (112) pixels
  0x001E, 0x001F, 0x001F, 0x001F, 0x001F, 0x003F, 0x6B5F, 0xBE1F, 0x5AFF, 0x52BF, 0xBDFF, 0x739F, 0x085F, 0x001F, 0x001F, 0x001F,   // 0x0080 (128) pixels
  0x001F, 0x001F, 0x0010, 0x0000, 0x0002, 0x001C, 0x001F, 0x001F, 0x001F, 0x001F, 0x109F, 0xC63F, 0x94DF, 0x18FF, 0x003F, 0x003F,   // 0x0090 (144) pixels
  0x10BF, 0x8C9F, 0xCE7F, 0x18DF, 0x001F, 0x001F, 0x001F, 0x001F, 0x001D, 0x0003, 0x000C, 0x001E, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x00A0 (160) pixels
  0x18FF, 0xD69F, 0xCE7F, 0x73BF, 0x087F, 0x003F, 0x6B7F, 0xC65F, 0xDEDF, 0x295F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x000D,   // 0x00B0 (176) pixels
  0x0016, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xAD7F, 0x18FF, 0x73BF, 0xC65F, 0xCE7F, 0x7BFF, 0x18DF, 0xAD7F, 0x213F,   // 0x00C0 (192) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0016, 0x001C, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xAD5F, 0x299F, 0xAD9F,   // 0x00D0 (208) pixels
  0xD6BF, 0xD6DF, 0xB5DF, 0x299F, 0xAD7F, 0x213F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x00E0 (224) pixels
  0x001F, 0x001F, 0x18FF, 0xE71F, 0xBDDF, 0x421F, 0x6B9F, 0x6B9F, 0x39FF, 0xB59F, 0xEF5F, 0x295F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x00F0 (240) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xE73F, 0xC63F, 0x39DF, 0x635F, 0x6B5F, 0x31BF, 0xBDDF,   // 0x0100 (256) pixels
  0xEF7F, 0x295F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xAD7F,   // 0x0110 (272) pixels
  0x39FF, 0xAD7F, 0xCE7F, 0xCE9F, 0xB59F, 0x39FF, 0xB59F, 0x213F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x0017, 0x001F,   // 0x0120 (288) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xAD5F, 0x085F, 0x087F, 0x52DF, 0x5AFF, 0x109F, 0x001F, 0xAD5F, 0x213F, 0x001F, 0x001F,   // 0x0130 (304) pixels
  0x001F, 0x001F, 0x001F, 0x0017, 0x000E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x18FF, 0xAD5F, 0x085F, 0x001F, 0x003F, 0x003F,   // 0x0140 (320) pixels
  0x001F, 0x001F, 0xAD5F, 0x213F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x000E, 0x0003, 0x001D, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x0150 (336) pixels
  0x109F, 0xBDFF, 0x73BF, 0x087F, 0x001F, 0x001F, 0x003F, 0x6B7F, 0xBE1F, 0x18DF, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x0004,   // 0x0160 (352) pixels
  0x0000, 0x0010, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x087F, 0x631F, 0xB5BF, 0x4A9F, 0x4A5F, 0xB5BF, 0x6B5F, 0x10BF, 0x001F,   // 0x0170 (368) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x0012, 0x0001, 0x0000, 0x0002, 0x0019, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x003F, 0x18DF,   // 0x0180 (384) pixels
  0x7BFF, 0x841F, 0x18FF, 0x005F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001B, 0x0003, 0x0000, 0x0000, 0x0000, 0x0005, 0x001B,   // 0x0190 (400) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x085F, 0x085F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001D, 0x0006,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0005, 0x0019, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,   // 0x01B0 (432) pixels
  0x001F, 0x001F, 0x001F, 0x001B, 0x0007, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x0011, 0x001E, 0x001F,   // 0x01C0 (448) pixels
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x0012, 0x0003, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0001, 0x0004, 0x000E, 0x0016, 0x001C, 0x001F, 0x001F, 0x001C, 0x0017, 0x000F, 0x0004, 0x0001, 0x0000,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};


uint16_t static coin3[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1082, 0x2104, 0x31A6, 0x39E7, 0x3A08, 0x31C7, 0x2145, 0x10A2, 0x0841, 0x0000, 0x0000,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0x2145, 0x4A8A, 0x73CF, 0x9514, 0xADD7, 0xADF8,   // 0x0020 (32) pixels
  0x9D55, 0x73F0, 0x52AA, 0x31A6, 0x10C3, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x31C7,   // 0x0030 (48) pixels
  0x73CF, 0x9D75, 0xB659, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE79, 0x9D75, 0x6BCF, 0x4249, 0x1904, 0x0020, 0x0000, 0x0000, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0861, 0x39E7, 0x7C51, 0xA596, 0xB638, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE59, 0x9D55,   // 0x0050 (80) pixels
  0x73CF, 0x4A6A, 0x18E3, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x2945, 0x73EF, 0x9D35, 0x9535, 0x9535, 0xA5B7, 0xB659,   // 0x0060 (96) pixels
  0xBE9A, 0xBE9A, 0xBE79, 0xADD8, 0x9D56, 0x8CF4, 0x7C52, 0x636E, 0x3A08, 0x10A2, 0x0000, 0x0000, 0x0000, 0x0000, 0x10A2, 0x52EB,   // 0x0070 (112) pixels
  0x8CB3, 0x6B90, 0x3A4C, 0x31EA, 0x422C, 0x7C53, 0xB639, 0xBE7A, 0x9515, 0x52EE, 0x31EB, 0x31EB, 0x4A8C, 0x638F, 0x5B0C, 0x2945,   // 0x0080 (128) pixels
  0x0020, 0x0000, 0x0000, 0x0000, 0x2124, 0x7410, 0x7411, 0x428C, 0x3BED, 0x3B4C, 0x29AA, 0x4A8D, 0x9515, 0xA5B7, 0x5B50, 0x3B2F,   // 0x0090 (144) pixels
  0x43B1, 0x324C, 0x31AA, 0x52CD, 0x638E, 0x3A08, 0x1082, 0x0000, 0x0000, 0x0000, 0x39E7, 0x8492, 0x6B90, 0x3B0C, 0x4D6F, 0x3C0D,   // 0x00A0 (160) pixels
  0x29CA, 0x39EB, 0x8493, 0x9535, 0x532F, 0x4C94, 0x4CD5, 0x326D, 0x29AA, 0x4A8C, 0x6B8F, 0x4AAA, 0x10A3, 0x0000, 0x0000, 0x0000,   // 0x00B0 (176) pixels
  0x4249, 0x8CD3, 0x73F1, 0x42CC, 0x44AE, 0x3BCD, 0x31CA, 0x424C, 0x8CD4, 0xA597, 0x5B4F, 0x43D2, 0x4C53, 0x324C, 0x31CA, 0x4AAD,   // 0x00C0 (192) pixels
  0x73EF, 0x52EB, 0x18C3, 0x0000, 0x0000, 0x0000, 0x4A6A, 0x94F3, 0x9515, 0x5B2F, 0x3A6C, 0x322B, 0x3A0B, 0x6BD1, 0xADF8, 0xBE79,   // 0x00D0 (208) pixels
  0x8473, 0x426D, 0x3A2C, 0x3A0C, 0x52CE, 0x6BD0, 0x7410, 0x5AEC, 0x18E3, 0x0000, 0x0000, 0x0000, 0x4A6A, 0x94F3, 0xADD7, 0xA5B7,   // 0x00E0 (224) pixels
  0x84B4, 0x73F2, 0x8CD4, 0xB618, 0xBE9A, 0xBE9A, 0xBE79, 0x9D56, 0x7412, 0x7C53, 0xA597, 0x9D75, 0x7410, 0x5AEC, 0x18E3, 0x0000,   // 0x00F0 (240) pixels
  0x0000, 0x0000, 0x4A6A, 0x94F3, 0xADD7, 0xBE59, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x0100 (256) pixels
  0xBE9A, 0x9D76, 0x7C10, 0x5B0C, 0x2104, 0x0000, 0x0000, 0x0000, 0x4A6A, 0x94F3, 0xADD7, 0xBE59, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x0110 (272) pixels
  0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xA596, 0x7C30, 0x634D, 0x31A6, 0x0861, 0x0000, 0x0000, 0x4A6A, 0x94F3,   // 0x0120 (288) pixels
  0xADD7, 0xBE59, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xA5B6, 0x8451, 0x73CF,   // 0x0130 (304) pixels
  0x52AB, 0x2104, 0x0021, 0x0000, 0x4249, 0x8CD3, 0xADD7, 0xB659, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x0140 (320) pixels
  0xBE9A, 0xBE9A, 0xBE9A, 0xB638, 0x94F4, 0x7C10, 0x6BAF, 0x52AA, 0x2986, 0x10A3, 0x39E7, 0x8492, 0xADD7, 0xB659, 0xBE9A, 0xBE9A,   // 0x0150 (336) pixels
  0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xB638, 0x94F4, 0x7C30, 0x73EF, 0x5B2C, 0x3186,   // 0x0160 (352) pixels
  0x2125, 0x7C30, 0xA5B6, 0xB638, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x0170 (368) pixels
  0xBE9A, 0xB618, 0x8492, 0x52EB, 0x3A08, 0x18C3, 0x10A2, 0x5B2D, 0x9D55, 0xADF8, 0xBE79, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x0180 (384) pixels
  0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xADF7, 0x6B8E, 0x2125, 0x10A2, 0x0841, 0x0000, 0x0841, 0x31C7, 0x8471, 0xADD7,   // 0x0190 (400) pixels
  0xB659, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0x8492, 0x2945, 0x0020, 0x0000,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x10A2, 0x52EB, 0x9514, 0xADF7, 0xBE79, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A,   // 0x01B0 (432) pixels
  0xBE9A, 0xB659, 0x73EF, 0x10A3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1904, 0x636D, 0x9D55, 0xADF7, 0xBE79, 0xBE9A,   // 0x01C0 (448) pixels
  0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xA596, 0x52EB, 0x1082, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0020, 0x2104, 0x5B2D, 0x9534, 0xADD7, 0xB659, 0xBE9A, 0xBE9A, 0xBE9A, 0xBE9A, 0xB618, 0x8C92, 0x5B2D, 0x4229, 0x18E3, 0x0020,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x18C3, 0x4249, 0x7C30, 0x9D75, 0xADF7, 0xB659, 0xBE9A, 0xAE18,   // 0x01F0 (496) pixels
  0x6B8E, 0x2104, 0x0861, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861,   // 0x0200 (512) pixels
  0x2104, 0x39E8, 0x5B0C, 0x73EF, 0x8472, 0x6BAE, 0x2986, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0882, 0x18C3, 0x18E3, 0x18C3, 0x0841, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};

uint16_t static coin4[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0020 (32) pixels
  0x1060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0030 (48) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x6AA2, 0xDDA4, 0xBCE4, 0x3981, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x41C1, 0xC504, 0xF645, 0xFE85, 0xFE85, 0xF625, 0x9C03,   // 0x0050 (80) pixels
  0x20C0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20E0, 0xA443, 0xEE25,   // 0x0060 (96) pixels
  0xFE85, 0xD584, 0x5A42, 0x8383, 0xF625, 0xFE65, 0xE5E5, 0x7B02, 0x0840, 0x0000, 0x0000, 0x1060, 0x72E2, 0x7B22, 0x0000, 0x0000,   // 0x0070 (112) pixels
  0x0000, 0x1060, 0x8362, 0xE5E5, 0xFE65, 0xEE25, 0x7B02, 0x1080, 0x0020, 0x0820, 0x2921, 0xA443, 0xFE65, 0xF665, 0xD564, 0x5221,   // 0x0080 (128) pixels
  0x3141, 0xCD24, 0xF605, 0x7B02, 0x0000, 0x0000, 0x18A0, 0xD564, 0xF665, 0xFE65, 0x9C03, 0x2100, 0x0820, 0x0000, 0x0000, 0x0000,   // 0x0090 (144) pixels
  0x0000, 0x0840, 0x49C1, 0xCD24, 0xFE65, 0xEE05, 0x5A62, 0x8B23, 0x5A02, 0x0840, 0x0000, 0x0000, 0x2920, 0xF645, 0xEDE5, 0x41A1,   // 0x00A0 (160) pixels
  0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x5201, 0x9C03, 0x7AE2, 0x93A3, 0x1880, 0x0020, 0x0000,   // 0x00B0 (176) pixels
  0x0000, 0x0000, 0x2921, 0xF645, 0xD564, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x6AC2, 0xA443, 0x4A01,   // 0x00C0 (192) pixels
  0x3961, 0xE5C5, 0xC4E4, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x2921, 0xF645, 0xCD44, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00D0 (208) pixels
  0x3981, 0x9BE3, 0xD564, 0x7302, 0x1080, 0x0020, 0x3161, 0xF645, 0xC504, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x2921, 0xF645,   // 0x00E0 (224) pixels
  0xCD44, 0x0840, 0x0000, 0x1060, 0x6282, 0xC504, 0xEE25, 0x9C03, 0x2901, 0x0820, 0x0000, 0x0000, 0x3161, 0xF645, 0xC504, 0x0840,   // 0x00F0 (240) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x2921, 0xF605, 0xC4C4, 0x3981, 0x93C3, 0xE5E5, 0xF645, 0xC504, 0x41C1, 0x0840, 0x0000, 0x0000,   // 0x0100 (256) pixels
  0x0000, 0x0000, 0x3161, 0xF645, 0xC504, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x3121, 0xED65, 0xF625, 0xF645, 0xFE65, 0xE5C5,   // 0x0110 (272) pixels
  0x62A2, 0x1060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3161, 0xF645, 0xC504, 0x0840, 0x0000, 0x0000, 0x3121, 0x8B83,   // 0x0120 (288) pixels
  0xE5C5, 0xFE85, 0xFE85, 0xF645, 0x8B83, 0x18C0, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3161, 0xF645,   // 0x0130 (304) pixels
  0xC504, 0x0840, 0x0000, 0x0000, 0x41A1, 0xC524, 0xFE85, 0xFE85, 0xAC84, 0x3141, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0140 (320) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x72E2, 0xFE65, 0xC504, 0x0840, 0x0000, 0x0000, 0x0020, 0x1060, 0x6AC2, 0x49E1, 0x1080, 0x7282,   // 0x0150 (336) pixels
  0x7AA3, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3161, 0xBCC4, 0xF645, 0xFE85, 0xA443, 0x0820, 0x0000, 0x0000,   // 0x0160 (352) pixels
  0x0000, 0x0000, 0x0020, 0x0000, 0x5A02, 0xDCC5, 0xF5E5, 0xDDA5, 0x6AA2, 0x0820, 0x0000, 0x0000, 0x18A0, 0x93E3, 0xEE25, 0xFE85,   // 0x0170 (368) pixels
  0xE5C5, 0x62A2, 0x1060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x3141, 0xB4A4, 0xFE65, 0xF645, 0xC524,   // 0x0180 (384) pixels
  0x49E1, 0x7302, 0xE5C5, 0xFE65, 0xF645, 0x8B83, 0x18A0, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0190 (400) pixels
  0x0000, 0x0000, 0x0840, 0x5221, 0xD584, 0xFE65, 0xF645, 0xF665, 0xFE85, 0xAC63, 0x3141, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1080, 0x7B22, 0xEE05, 0xCD44, 0x49E1, 0x0840,   // 0x01B0 (432) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01C0 (448) pixels
  0x0000, 0x0020, 0x18C0, 0x1060, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};
uint16_t static coin5[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18C2, 0x4A67, 0x7BED, 0x9D10, 0xB592, 0x9CF0, 0x7BED, 0x632A, 0x31A5,   // 0x0010 (16) pixels
  0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0x5289, 0x8391, 0x7A75, 0x7197,   // 0x0020 (32) pixels
  0x7178, 0x7A18, 0x8B55, 0x7B72, 0x6231, 0x6252, 0x734E, 0x4206, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0030 (48) pixels
  0x0841, 0x5ACA, 0x7A56, 0x58F5, 0x5878, 0x683E, 0x683E, 0x683E, 0x687D, 0x7179, 0x7AD3, 0x61F4, 0x61D5, 0x83D0, 0x4A47, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4A47, 0x7214, 0x689C, 0x601B, 0x581B, 0x601E, 0x681E, 0x601D, 0x601D, 0x583A,   // 0x0050 (80) pixels
  0x6136, 0x7235, 0x6212, 0x6270, 0x6AEE, 0x18C2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1081, 0x62AE, 0x7179, 0x681E, 0x681E,   // 0x0060 (96) pixels
  0x681E, 0x681F, 0x681F, 0x601E, 0x601C, 0x581C, 0x603D, 0x7198, 0x6A53, 0x4895, 0x59D1, 0x4A47, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0070 (112) pixels
  0x0000, 0x31C5, 0x61D3, 0x689B, 0x681E, 0x681F, 0x681F, 0x681F, 0x681F, 0x681F, 0x681E, 0x601E, 0x601E, 0x719A, 0x7274, 0x4016,   // 0x0080 (128) pixels
  0x5173, 0x5AC9, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4227, 0x69B4, 0x685D, 0x681F, 0x681F, 0x681F, 0x681E, 0x681E, 0x681F,   // 0x0090 (144) pixels
  0x601E, 0x601E, 0x681F, 0x795B, 0x7235, 0x4055, 0x5154, 0x62CB, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5AE9, 0x8334, 0x70FC,   // 0x00A0 (160) pixels
  0x681E, 0x5858, 0x5992, 0x72D1, 0x7291, 0x5933, 0x581A, 0x681E, 0x681F, 0x711C, 0x7216, 0x48D5, 0x5955, 0x62CC, 0x0000, 0x0000,   // 0x00B0 (176) pixels
  0x0000, 0x0000, 0x0000, 0x5AC9, 0x7292, 0x609A, 0x58B6, 0x8373, 0xB594, 0xC635, 0xC614, 0xAD13, 0x7273, 0x5838, 0x681E, 0x70FB,   // 0x00C0 (192) pixels
  0x7216, 0x48D5, 0x5955, 0x62EC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x52A9, 0x6996, 0x5838, 0x82F4, 0xC615, 0xDF17, 0xE717,   // 0x00D0 (208) pixels
  0xE717, 0xDEF6, 0xA512, 0x69D4, 0x601C, 0x70FC, 0x71F6, 0x48B5, 0x5956, 0x62EB, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x52A8,   // 0x00E0 (224) pixels
  0x6978, 0x5096, 0x9C54, 0xAD72, 0xA532, 0xCE75, 0xBE14, 0xAD72, 0xB5B3, 0x8373, 0x5057, 0x793C, 0x7216, 0x4056, 0x5955, 0x5ACA,   // 0x00F0 (240) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x52A8, 0x6977, 0x58D5, 0x9C73, 0x83B1, 0x6A91, 0xAD34, 0x9452, 0x6250, 0x9C94, 0x9412,   // 0x0100 (256) pixels
  0x5075, 0x797B, 0x7255, 0x4055, 0x61D3, 0x6B4B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x52A9, 0x6978, 0x5057, 0x8BD3, 0x9CD2,   // 0x0110 (272) pixels
  0x9C73, 0x9CD1, 0x9470, 0x9432, 0xA4D2, 0x8352, 0x6098, 0x797B, 0x7275, 0x4074, 0x6251, 0x632B, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0120 (288) pixels
  0x0000, 0x5AAA, 0x7179, 0x601C, 0x69B4, 0xA4D2, 0xB5D3, 0x8C4F, 0x9CD1, 0xBDF3, 0x8C31, 0x69B5, 0x685D, 0x797B, 0x7274, 0x3873,   // 0x0130 (304) pixels
  0x59F2, 0x62ED, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x62AC, 0x717A, 0x601E, 0x5839, 0x8B74, 0xAD72, 0xA512, 0xBDD4, 0xA532,   // 0x0140 (320) pixels
  0x7253, 0x607B, 0x681F, 0x797A, 0x7273, 0x3834, 0x5995, 0x6AED, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x62AD, 0x797B, 0x681E,   // 0x0150 (336) pixels
  0x601C, 0x6A13, 0x7B4F, 0x8C10, 0x9470, 0x732F, 0x6136, 0x681F, 0x681F, 0x717A, 0x6A73, 0x4017, 0x5955, 0x62EC, 0x0000, 0x0000,   // 0x0160 (352) pixels
  0x0000, 0x0000, 0x0000, 0x628E, 0x795B, 0x681F, 0x681E, 0x60B9, 0x60F7, 0x6937, 0x6976, 0x6137, 0x609A, 0x681F, 0x681F, 0x717A,   // 0x0170 (368) pixels
  0x6A53, 0x4016, 0x5154, 0x5ACA, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x626F, 0x713B, 0x681F, 0x681F, 0x681F, 0x681F, 0x681F,   // 0x0180 (384) pixels
  0x681E, 0x683E, 0x681E, 0x681E, 0x681E, 0x797A, 0x6A74, 0x3816, 0x5153, 0x52C9, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x626F,   // 0x0190 (400) pixels
  0x6939, 0x601D, 0x681F, 0x681F, 0x681F, 0x681F, 0x681F, 0x681F, 0x681F, 0x681E, 0x601E, 0x797B, 0x7275, 0x4016, 0x5134, 0x52A9,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x62AE, 0x6958, 0x601C, 0x681E, 0x681F, 0x681F, 0x681F, 0x681E, 0x681E, 0x681F, 0x681E,   // 0x01B0 (432) pixels
  0x601D, 0x7179, 0x7275, 0x4017, 0x5133, 0x52A8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x6AED, 0x71D8, 0x607B, 0x605C, 0x603D,   // 0x01C0 (448) pixels
  0x601D, 0x681E, 0x601D, 0x601E, 0x681F, 0x681E, 0x601D, 0x7179, 0x7274, 0x50B7, 0x6A53, 0x5AE9, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x2144, 0x7B30, 0x82B7, 0x79F8, 0x79D8, 0x79D9, 0x79D9, 0x79D9, 0x79D9, 0x79D9, 0x79D9, 0x79DA, 0x79BA, 0x8AD7, 0x8392, 0x5A11,   // 0x01E0 (480) pixels
  0x6AEE, 0x6B6B, 0x2123, 0x0000, 0x0000, 0x2964, 0x73AC, 0x8BD3, 0x9376, 0x9396, 0x93B6, 0x93B6, 0x9396, 0x8B75, 0x8B55, 0x8315,   // 0x01F0 (496) pixels
  0x82F5, 0x82D5, 0x7A96, 0x8B95, 0x9451, 0x5ACC, 0x5AAC, 0x738C, 0x5AE9, 0x0000, 0x0000, 0x632A, 0x8372, 0x72B4, 0x7294, 0x7295,   // 0x0200 (512) pixels
  0x7A75, 0x7276, 0x7256, 0x7236, 0x7217, 0x71F7, 0x71D7, 0x69B7, 0x69B6, 0x7AD5, 0x83D0, 0x528C, 0x528B, 0x5ACB, 0x630A, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x630A, 0x5153, 0x3816, 0x3816, 0x3815, 0x4055, 0x4095, 0x48D5, 0x5115, 0x5975, 0x61B5, 0x69F5, 0x6A55, 0x7295, 0x8334,   // 0x0220 (544) pixels
  0x83D1, 0x524C, 0x1067, 0x3989, 0x5AE9, 0x0000, 0x0000, 0x632A, 0x6230, 0x5134, 0x5115, 0x50F6, 0x48D5, 0x48B6, 0x4876, 0x4056,   // 0x0230 (560) pixels
  0x4036, 0x4017, 0x4017, 0x4017, 0x4016, 0x48F5, 0x5A31, 0x41EB, 0x398A, 0x4A29, 0x39E6, 0x0000, 0x0000, 0x4227, 0x62CC, 0x628E,   // 0x0240 (576) pixels
  0x626E, 0x5A4F, 0x5A0F, 0x59F0, 0x51B0, 0x5191, 0x4951, 0x4932, 0x5133, 0x5134, 0x5133, 0x59F1, 0x72F0, 0x630C, 0x52A9, 0x3185,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x1082, 0x2103, 0x2985, 0x39E6, 0x4A67, 0x52C9, 0x632A, 0x6B8B, 0x73AC, 0x7BCD,   // 0x0260 (608) pixels
  0x7BED, 0x8C4F, 0x946F, 0x630A, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};
uint16_t static coin6[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x08E5, 0x120E, 0x12D3, 0x1336, 0x1B56, 0x12F4, 0x1250, 0x0969, 0x0041,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0906, 0x12D3, 0x1378, 0x1399, 0x13B9,   // 0x0020 (32) pixels
  0x13BA, 0x13BA, 0x13B9, 0x1399, 0x1399, 0x1336, 0x09AB, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020,   // 0x0030 (48) pixels
  0x120D, 0x1378, 0x13B9, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x1399, 0x12D3, 0x0042, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1270, 0x1399, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA,   // 0x0050 (80) pixels
  0x13BA, 0x13BA, 0x13BA, 0x1336, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1A0D, 0x1399, 0x13BA, 0x13BA, 0x13BA, 0x13BA,   // 0x0060 (96) pixels
  0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x0949, 0x0862, 0x098C, 0x0021, 0x0000, 0x0000, 0x1126,   // 0x0070 (112) pixels
  0x1B78, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x124F, 0x0021,   // 0x0080 (128) pixels
  0x118B, 0x0A32, 0x0042, 0x0000, 0x0000, 0x22D2, 0x1BB9, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA,   // 0x0090 (144) pixels
  0x13BA, 0x13BA, 0x13BA, 0x1271, 0x0041, 0x0908, 0x0A32, 0x094B, 0x0000, 0x0000, 0x18E4, 0x23B8, 0x1BBA, 0x13BA, 0x13BA, 0x13BA,   // 0x00A0 (160) pixels
  0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x1BB9, 0x120D, 0x0041, 0x0908, 0x0A12, 0x09F0, 0x0042, 0x08E6, 0x0969,   // 0x00B0 (176) pixels
  0x3A4B, 0x53F6, 0x2B55, 0x1B98, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x13BA, 0x1BB9, 0x1AB2, 0x08E6, 0x0042, 0x096B,   // 0x00C0 (192) pixels
  0x0A32, 0x0A11, 0x0063, 0x0862, 0x1B35, 0x0969, 0x29C9, 0x5416, 0x3B32, 0x224F, 0x2A6E, 0x22B0, 0x2313, 0x2314, 0x2313, 0x1A90,   // 0x00D0 (208) pixels
  0x11CB, 0x08C4, 0x0084, 0x0929, 0x09F1, 0x0A33, 0x11D0, 0x0063, 0x0042, 0x12D3, 0x12F4, 0x0041, 0x2A2D, 0x5436, 0x3B74, 0x2A8F,   // 0x00E0 (224) pixels
  0x224F, 0x1211, 0x09AD, 0x096B, 0x0929, 0x094A, 0x098C, 0x09CF, 0x0A12, 0x0A33, 0x1232, 0x094A, 0x0021, 0x08A4, 0x12F4, 0x1B57,   // 0x00F0 (240) pixels
  0x08C5, 0x0020, 0x224F, 0x3B11, 0x3BB4, 0x2B33, 0x1AD2, 0x21CA, 0x21CC, 0x2230, 0x1A52, 0x1A52, 0x1A52, 0x1A52, 0x11CE, 0x1129,   // 0x0100 (256) pixels
  0x0042, 0x0062, 0x11CC, 0x1377, 0x1B78, 0x0907, 0x0020, 0x2AAF, 0x220E, 0x19EF, 0x43F5, 0x3311, 0x2AB0, 0x1B77, 0x12B3, 0x11CC,   // 0x0110 (272) pixels
  0x1127, 0x10C4, 0x0883, 0x0062, 0x08A4, 0x0949, 0x124F, 0x1357, 0x1399, 0x1B15, 0x08E5, 0x0020, 0x2AD0, 0x224D, 0x21AA, 0x0A33,   // 0x0120 (288) pixels
  0x21EB, 0x4458, 0x3353, 0x21CA, 0x2AF2, 0x1B78, 0x1398, 0x1398, 0x1378, 0x1378, 0x1378, 0x1399, 0x1B99, 0x1B77, 0x11EC, 0x0062,   // 0x0130 (304) pixels
  0x0062, 0x2B32, 0x3394, 0x0042, 0x1925, 0x1232, 0x1211, 0x29EA, 0x4479, 0x3C79, 0x222C, 0x1946, 0x220C, 0x22B0, 0x2313, 0x2334,   // 0x0140 (320) pixels
  0x22D2, 0x1A4E, 0x1168, 0x0042, 0x0041, 0x19EB, 0x3C59, 0x33D6, 0x0883, 0x0000, 0x0841, 0x222F, 0x0A33, 0x11F0, 0x2188, 0x43F6,   // 0x0150 (336) pixels
  0x44FD, 0x3C7A, 0x2AF1, 0x19EB, 0x1106, 0x08C4, 0x08C4, 0x1105, 0x19CA, 0x2AD0, 0x3C59, 0x3CFC, 0x2B32, 0x0082, 0x0000, 0x0000,   // 0x0160 (352) pixels
  0x0000, 0x2146, 0x1232, 0x0A33, 0x09D0, 0x1106, 0x326C, 0x4478, 0x44FD, 0x3CFD, 0x3CDD, 0x3CDC, 0x3CDC, 0x3CDC, 0x3CFD, 0x44FD,   // 0x0170 (368) pixels
  0x3BF7, 0x1989, 0x0041, 0x0063, 0x0884, 0x0000, 0x0000, 0x0020, 0x29EC, 0x1233, 0x0A33, 0x0A12, 0x094A, 0x10C4, 0x21A8, 0x32EF,   // 0x0180 (384) pixels
  0x3BD4, 0x4437, 0x3C17, 0x3394, 0x2AAE, 0x1146, 0x0041, 0x0021, 0x0909, 0x096C, 0x0021, 0x0000, 0x0000, 0x0000, 0x0882, 0x220D,   // 0x0190 (400) pixels
  0x0A33, 0x0A34, 0x0A33, 0x0A11, 0x096B, 0x08E6, 0x0883, 0x0041, 0x0041, 0x0041, 0x0062, 0x08A5, 0x094A, 0x09F1, 0x11CF, 0x0042,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0862, 0x29EC, 0x1253, 0x0A34, 0x0A33, 0x0A33, 0x0A33, 0x0A12, 0x0A11, 0x09F1, 0x0A11,   // 0x01B0 (432) pixels
  0x0A12, 0x0A33, 0x0A33, 0x098D, 0x0042, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0021, 0x2147, 0x222F, 0x1253,   // 0x01C0 (448) pixels
  0x0A33, 0x0A34, 0x0A34, 0x0A33, 0x0A33, 0x0A33, 0x0A33, 0x1210, 0x08E7, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0041, 0x1905, 0x21AA, 0x220E, 0x2230, 0x1A30, 0x19EE, 0x116B, 0x08C5, 0x0021, 0x0000, 0x0000,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};
uint16_t static coin7[] = {
  0x0021, 0x0021, 0x0021, 0x0021, 0x0041, 0x0041, 0x0883, 0x120D, 0x1B35, 0x1BFA, 0x1C5D, 0x1BB8, 0x0883, 0x0862, 0x11AA, 0x08C5,   // 0x0010 (16) pixels
  0x0882, 0x0862, 0x0882, 0x0882, 0x0882, 0x0882, 0x0020, 0x0021, 0x0021, 0x0021, 0x0842, 0x122E, 0x1BDA, 0x1C3C, 0x1C5D, 0x1C5D,   // 0x0020 (32) pixels
  0x1C5D, 0x1BB8, 0x0883, 0x0862, 0x1B56, 0x1BFB, 0x1291, 0x08C4, 0x0862, 0x0882, 0x0882, 0x0882, 0x0020, 0x0020, 0x0021, 0x08A4,   // 0x0030 (48) pixels
  0x1B56, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BB8, 0x0883, 0x0862, 0x1B76, 0x1C5D, 0x1C3C, 0x1B98, 0x0927, 0x0882,   // 0x0040 (64) pixels
  0x0882, 0x0882, 0x0020, 0x0020, 0x08A4, 0x1B98, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BB8, 0x0883, 0x0862,   // 0x0050 (80) pixels
  0x1B76, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BFA, 0x0927, 0x0882, 0x0882, 0x0000, 0x0041, 0x1B56, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x0060 (96) pixels
  0x1C5D, 0x1C3C, 0x1BD9, 0x1B35, 0x0882, 0x0861, 0x1B77, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BB8, 0x08C5, 0x0882, 0x0000, 0x120E,   // 0x0070 (112) pixels
  0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1B98, 0x09AA, 0x08A3, 0x0883, 0x0862, 0x0041, 0x0883, 0x1BFA, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x0080 (128) pixels
  0x1C5D, 0x1C5D, 0x12B1, 0x0883, 0x0042, 0x1BDA, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1314, 0x0083, 0x0041, 0x0041, 0x0062, 0x0062,   // 0x0090 (144) pixels
  0x08C5, 0x12F3, 0x1C3D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x0906, 0x09CC, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BD9,   // 0x00A0 (160) pixels
  0x00A4, 0x0021, 0x0948, 0x1B77, 0x1C1B, 0x1C1B, 0x1C1C, 0x1C3D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x124F,   // 0x00B0 (176) pixels
  0x12F4, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x122E, 0x0021, 0x08A4, 0x1BDA, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x1291,   // 0x00C0 (192) pixels
  0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1B56, 0x1BD9, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x0927, 0x0021, 0x09EC, 0x1C3C, 0x1C5D,   // 0x00D0 (208) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x11ED, 0x0883, 0x12B2, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C1B, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x00E0 (224) pixels
  0x1C5D, 0x08E6, 0x0020, 0x122E, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x098A, 0x0041, 0x0948, 0x1C3C, 0x1C5D, 0x1C5D,   // 0x00F0 (240) pixels
  0x1C5D, 0x1C5D, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x0969, 0x0021, 0x0948, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x0100 (256) pixels
  0x1270, 0x0062, 0x08A4, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BDA, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x12D3, 0x0021, 0x0928,   // 0x0110 (272) pixels
  0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1270, 0x0842, 0x08C5, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x1315, 0x1C5D,   // 0x0120 (288) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x122F, 0x1BDA, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x0928, 0x0041, 0x09AA, 0x1C3C,   // 0x0130 (304) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1B77, 0x11ED, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x0140 (320) pixels
  0x1BFA, 0x11CC, 0x0041, 0x0041, 0x1B56, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1270, 0x0063, 0x1BFB, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x0150 (336) pixels
  0x1C5D, 0x1C5D, 0x1B77, 0x0928, 0x0083, 0x0083, 0x0062, 0x0041, 0x0021, 0x1250, 0x1C3C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3D, 0x0906,   // 0x0160 (352) pixels
  0x0000, 0x124F, 0x1C3D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x08C5, 0x0020, 0x0000, 0x0000, 0x0021, 0x0906, 0x12F4, 0x1C3C,   // 0x0170 (368) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x12D2, 0x0862, 0x0000, 0x0042, 0x1B77, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BD9, 0x0021, 0x0000,   // 0x0180 (384) pixels
  0x1271, 0x1B77, 0x1BD9, 0x1C1C, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1BDA, 0x08C5, 0x0041, 0x0000, 0x0000, 0x00C5, 0x1BD9,   // 0x0190 (400) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1BB9, 0x0021, 0x0000, 0x1335, 0x1C3D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C1B, 0x0948,   // 0x01A0 (416) pixels
  0x0041, 0x0041, 0x0000, 0x0000, 0x0000, 0x00C5, 0x1B78, 0x1C5D, 0x1C5D, 0x1BB9, 0x0021, 0x0000, 0x1335, 0x1C5D, 0x1C5D, 0x1C5D,   // 0x01B0 (432) pixels
  0x1C5D, 0x1C5D, 0x1C5D, 0x1BDA, 0x0928, 0x0041, 0x0021, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0062, 0x1250, 0x1C1C, 0x1BB9,   // 0x01C0 (448) pixels
  0x0021, 0x0000, 0x1335, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C5D, 0x1C3C, 0x12B2, 0x00A4, 0x0021, 0x0021, 0x0021, 0x0021, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0021, 0x0084, 0x09AB, 0x0000, 0x0000, 0x1335, 0x1C3D, 0x1BFB, 0x1B56, 0x122F, 0x08C5, 0x0041, 0x0020,   // 0x01E0 (480) pixels
  0x0020, 0x0020, 0x0020, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};
uint16_t static coin8[] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x08C7, 0x196C, 0x21CF, 0x21F0, 0x21F0, 0x21CF, 0x196C, 0x10E7, 0x0042,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0021, 0x10E8, 0x19AE, 0x2210, 0x2211, 0x2A31,   // 0x0020 (32) pixels
  0x2A32, 0x2A32, 0x2A31, 0x2231, 0x2210, 0x21CE, 0x1109, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0063,   // 0x0030 (48) pixels
  0x196C, 0x21F0, 0x2A31, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2210, 0x198C, 0x0063, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0063, 0x198C, 0x2211, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32,   // 0x0050 (80) pixels
  0x2A32, 0x2A32, 0x2A32, 0x2231, 0x19AD, 0x0063, 0x0000, 0x0000, 0x0000, 0x0021, 0x196C, 0x2211, 0x2A32, 0x2A32, 0x2A32, 0x2A32,   // 0x0060 (96) pixels
  0x42F1, 0x7410, 0x8CD0, 0x8CF0, 0x7450, 0x4B31, 0x2A52, 0x2A32, 0x2A32, 0x2A32, 0x2231, 0x198D, 0x0021, 0x0000, 0x0000, 0x10E8,   // 0x0070 (112) pixels
  0x2210, 0x2A32, 0x2A32, 0x2A32, 0x2A52, 0x3292, 0x8CF0, 0xDEEE, 0xE74E, 0xE74E, 0xDF0E, 0xC66E, 0x8CD0, 0x42D1, 0x2A32, 0x2A32,   // 0x0080 (128) pixels
  0x2A32, 0x2211, 0x1109, 0x0000, 0x0022, 0x21CE, 0x2A31, 0x2A32, 0x2A32, 0x3AB1, 0x63D1, 0x4B31, 0x63F0, 0xB5EF, 0xEF4E, 0xFFED,   // 0x0090 (144) pixels
  0xFFED, 0xFFED, 0xE72E, 0x9D4F, 0x3AD1, 0x2A32, 0x2A32, 0x2A32, 0x21EF, 0x0042, 0x08C7, 0x2210, 0x2A32, 0x2A32, 0x2A52, 0x7C90,   // 0x00A0 (160) pixels
  0xBE0F, 0x63D1, 0x3272, 0x5351, 0x7450, 0x9D4F, 0xC66E, 0xEF6E, 0xFFED, 0xE74E, 0x8CD0, 0x2A52, 0x2A32, 0x2A32, 0x2A31, 0x08C7,   // 0x00B0 (176) pixels
  0x196C, 0x2231, 0x2A32, 0x2A32, 0x42F1, 0xBE2F, 0xF78D, 0x8CD0, 0x3292, 0x2A32, 0x2A52, 0x42D1, 0x5BB1, 0x84AF, 0xC60C, 0xFF6A,   // 0x00C0 (192) pixels
  0xCE8D, 0x4311, 0x2A32, 0x2A32, 0x2A32, 0x196C, 0x21CF, 0x2A31, 0x2A32, 0x2A32, 0x6C10, 0xDEEE, 0xFFED, 0xC66E, 0x5BB1, 0x2A52,   // 0x00D0 (208) pixels
  0x2A32, 0x2A32, 0x2A32, 0x3271, 0x73CD, 0xE606, 0xE647, 0x73EE, 0x2A32, 0x2A32, 0x2A32, 0x21CF, 0x21F0, 0x2A32, 0x2A32, 0x2A32,   // 0x00E0 (224) pixels
  0x84B0, 0xE72E, 0xFFED, 0xF7AD, 0xA58F, 0x4B31, 0x2A52, 0x2A32, 0x2A32, 0x2A32, 0x42B0, 0x8C0A, 0xCD25, 0x8C2A, 0x2A32, 0x2A32,   // 0x00F0 (240) pixels
  0x2A32, 0x21F0, 0x21F0, 0x2A32, 0x2A32, 0x2A32, 0x84B0, 0xE72E, 0xFFED, 0xFFED, 0xEF6E, 0xA58F, 0x5B91, 0x3292, 0x2A32, 0x2A32,   // 0x0100 (256) pixels
  0x2A32, 0x3A90, 0x738C, 0x6B6C, 0x2A32, 0x2A32, 0x2A32, 0x2210, 0x21CF, 0x2A32, 0x2A32, 0x2A32, 0x6C10, 0xDEEE, 0xFFED, 0xFFED,   // 0x0110 (272) pixels
  0xFFED, 0xF78D, 0xBE2F, 0x8490, 0x5BB1, 0x4B31, 0x4311, 0x4B11, 0x4B31, 0x3AB1, 0x2A32, 0x2A32, 0x2A32, 0x21CF, 0x196C, 0x2231,   // 0x0120 (288) pixels
  0x2A32, 0x2A32, 0x42F1, 0xC64E, 0xFFCD, 0xFFED, 0xFFED, 0xFFED, 0xFFED, 0xF78D, 0xCEAE, 0xADCF, 0xA58F, 0xA58F, 0x952F, 0x3AD1,   // 0x0130 (304) pixels
  0x2A32, 0x2A32, 0x2A32, 0x196C, 0x10E7, 0x2211, 0x2A32, 0x2A32, 0x2A52, 0x84B0, 0xE72E, 0xFFED, 0xFFED, 0xFFED, 0xFFED, 0xFFED,   // 0x0140 (320) pixels
  0xFFED, 0xFFED, 0xFFED, 0xEF6E, 0x9D4F, 0x2A52, 0x2A32, 0x2A32, 0x2A32, 0x10E7, 0x0042, 0x21CF, 0x2A32, 0x2A32, 0x2A32, 0x3AB1,   // 0x0150 (336) pixels
  0x9D4F, 0xE74E, 0xFFCD, 0xFFED, 0xFFED, 0xFFED, 0xFFED, 0xFFED, 0xEF6E, 0xADCF, 0x42F1, 0x2A32, 0x2A32, 0x2A32, 0x21F0, 0x0042,   // 0x0160 (352) pixels
  0x0000, 0x1109, 0x2210, 0x2A32, 0x2A32, 0x2A32, 0x3AB1, 0x8CD0, 0xCEAE, 0xEF4E, 0xEF8D, 0xEF8D, 0xEF6E, 0xD6CE, 0x952F, 0x42D1,   // 0x0170 (368) pixels
  0x2A32, 0x2A32, 0x2A32, 0x2231, 0x112A, 0x0000, 0x0000, 0x0021, 0x198D, 0x2231, 0x2A32, 0x2A32, 0x2A32, 0x2A52, 0x42F1, 0x7430,   // 0x0180 (384) pixels
  0x8CF0, 0x9510, 0x7450, 0x4B11, 0x2A52, 0x2A32, 0x2A32, 0x2A32, 0x2A31, 0x21AE, 0x0021, 0x0000, 0x0000, 0x0000, 0x0864, 0x19AE,   // 0x0190 (400) pixels
  0x2A31, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A31, 0x21CF, 0x0864,   // 0x01A0 (416) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0864, 0x198D, 0x2211, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32,   // 0x01B0 (432) pixels
  0x2A32, 0x2A32, 0x2231, 0x21AE, 0x0864, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0021, 0x1109, 0x21F0, 0x2A32,   // 0x01C0 (448) pixels
  0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2A32, 0x2210, 0x112A, 0x0021, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0042, 0x08C7, 0x196B, 0x21CF, 0x21F0, 0x21F0, 0x21CF, 0x196C, 0x10E8, 0x0042, 0x0000, 0x0000,   // 0x01E0 (480) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
};
uint16_t static coin9[] = {

};
uint16_t static coin10[] = {

};





//DO NOT CHANGE BELOW THIS LINE///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// STABLE AS OF 03/07
#include <PxMatrix.h>
#include <Adafruit_GFX.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <WiFiManager.h>
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>
#include <cryptosign.h>

WiFiManager wm;
WiFiManagerParameter custom_field;

#ifdef ESP8266

#include <Ticker.h>
Ticker display_ticker;
#define P_LAT 16
#define P_A 5
#define P_B 4
#define P_C 15
#define P_D 12
#define P_E 0
#define P_OE 2

#endif

#define matrix_width 64
#define matrix_height 32

// This defines the 'on' time of the display is us. The larger this number,
// the brighter the display. If too large the ESP will crash
uint8_t display_draw_time = 30; //30-70 is usually fine

PxMATRIX display(64, 32, P_LAT, P_OE, P_A, P_B, P_C, P_D, P_E);

// Some standard colors
uint16_t myRED = display.color565(255, 0, 0);
uint16_t myGREEN = display.color565(0, 255, 0);
uint16_t myBLUE = display.color565(0, 0, 255);
uint16_t myWHITE = display.color565(255, 255, 255);
uint16_t myYELLOW = display.color565(255, 255, 0);
uint16_t myCYAN = display.color565(0, 255, 255);
uint16_t myMAGENTA = display.color565(255, 0, 255);
uint16_t myBLACK = display.color565(0, 0, 0);
uint16_t myCOLORS[8] = {myRED, myGREEN, myBLUE, myWHITE, myYELLOW, myCYAN, myMAGENTA, myBLACK};

#ifdef ESP8266
// ISR for display refresh
void display_updater()
{
  display.display(display_draw_time);
}
#endif

#ifdef ESP32
void IRAM_ATTR display_updater() {
  // Increment the counter and set the time of ISR
  portENTER_CRITICAL_ISR(&timerMux);
  display.display(display_draw_time);
  portEXIT_CRITICAL_ISR(&timerMux);
}
#endif


void display_update_enable(bool is_enable)
{

#ifdef ESP8266
  if (is_enable)
    display_ticker.attach(0.004, display_updater);
  else
    display_ticker.detach();
#endif

#ifdef ESP32
  if (is_enable)
  {
    timer = timerBegin(0, 80, true);
    timerAttachInterrupt(timer, &display_updater, true);
    timerAlarmWrite(timer, 4000, true);
    timerAlarmEnable(timer);
  }
  else
  {
    timerDetachInterrupt(timer);
    timerAlarmDisable(timer);
  }
#endif
}

// GWEI GAS SCREEN
uint16_t static gwei[] = {
  0x18E3, 0xB596, 0xF7BE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xCE59, 0x52AA, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0010 (16) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA534, 0xF79E, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0020 (32) pixels
  0xFFFF, 0xBDD7, 0x39E7, 0x0000, 0x0020, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xE73C, 0xE71C, 0x39C7, 0x10A2,   // 0x0030 (48) pixels
  0x10A2, 0x10A2, 0x10A2, 0x10A2, 0x10A2, 0x2945, 0xA514, 0xDEDB, 0x630C, 0x1082, 0x6B6D, 0xB596, 0x39C7, 0x0000, 0x0000, 0x0000,   // 0x0040 (64) pixels
  0x0000, 0x0000, 0xEF7D, 0xD69A, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8C71, 0xDEFB, 0x6B4D, 0x0020,   // 0x0050 (80) pixels
  0x528A, 0xD6BA, 0xB5B6, 0x2965, 0x0000, 0x0000, 0x0000, 0x0000, 0xEF7D, 0xD69A, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0060 (96) pixels
  0x0000, 0x0841, 0x8C71, 0xDEFB, 0x6B4D, 0x0000, 0x1082, 0x6B4D, 0xDEFB, 0xAD75, 0x2104, 0x0000, 0x0000, 0x0000, 0xEF7D, 0xD69A,   // 0x0070 (112) pixels
  0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8C71, 0xDEFB, 0x632C, 0x0000, 0x0000, 0x2965, 0xA534, 0xF79E,   // 0x0080 (128) pixels
  0xA534, 0x18C3, 0x0000, 0x0000, 0xEF7D, 0xD69A, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8C71, 0xDEFB,   // 0x0090 (144) pixels
  0x632C, 0x0000, 0x0000, 0x2124, 0x9CD3, 0xFFFF, 0xEF7D, 0x94B2, 0x0020, 0x0000, 0xEF7D, 0xD69A, 0x2104, 0x0000, 0x0000, 0x0000,   // 0x00A0 (160) pixels
  0x0000, 0x0000, 0x0000, 0x0841, 0x8C71, 0xDEFB, 0x632C, 0x0000, 0x0000, 0x2124, 0x94B2, 0xD69A, 0xA534, 0xDEDB, 0x4208, 0x0000,   // 0x00B0 (176) pixels
  0xEF7D, 0xD69A, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8C71, 0xDEDB, 0x632C, 0x0000, 0x0000, 0x2124,   // 0x00C0 (192) pixels
  0x9492, 0xAD75, 0x528A, 0xEF5D, 0x6B6D, 0x0000, 0xEF7D, 0xE71C, 0x4208, 0x18E3, 0x18E3, 0x18E3, 0x18E3, 0x18E3, 0x18E3, 0x3186,   // 0x00D0 (208) pixels
  0xA514, 0xDEDB, 0x630C, 0x0000, 0x0000, 0x2104, 0x8C51, 0xC618, 0x632C, 0xEF5D, 0x7BCF, 0x0000, 0xEF7D, 0xFFDF, 0xC638, 0xBDD7,   // 0x00E0 (224) pixels
  0xBDD7, 0xBDD7, 0xBDD7, 0xBDD7, 0xBDD7, 0xC618, 0xE73C, 0xDEDB, 0x630C, 0x0000, 0x0000, 0x0841, 0x528A, 0xCE59, 0xD69A, 0xEF7D,   // 0x00F0 (240) pixels
  0x7BCF, 0x0000, 0xEF7D, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xD6BA, 0x5AEB, 0x0000,   // 0x0100 (256) pixels
  0x0000, 0x0000, 0x1082, 0x4A49, 0x8430, 0xDEDB, 0x7BCF, 0x0000, 0xEF7D, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0110 (272) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xDEDB, 0x738E, 0x2124, 0x18E3, 0x0861, 0x0000, 0x0000, 0x31A6, 0xD69A, 0x7BCF, 0x0000, 0xEF7D, 0xFFFF,   // 0x0120 (288) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF79E, 0xCE59, 0xAD75, 0xAD55, 0x8430, 0x31A6, 0x0000,   // 0x0130 (304) pixels
  0x2965, 0xD6BA, 0x7BCF, 0x0000, 0xEF7D, 0xD69A, 0x18E3, 0x0000, 0x0000, 0x31A6, 0x6B6D, 0x0841, 0x0000, 0x0000, 0x7BCF, 0xF7BE,   // 0x0140 (320) pixels
  0xDEFB, 0xC618, 0xCE79, 0xDEFB, 0x94B2, 0x1082, 0x3186, 0xDEDB, 0x7BCF, 0x0000, 0xEF7D, 0x630C, 0x0000, 0x0000, 0x2104, 0x94B2,   // 0x0150 (336) pixels
  0xD6BA, 0x52AA, 0x0000, 0x0000, 0x0000, 0xD6BA, 0x9492, 0x4228, 0x5AEB, 0xAD55, 0xCE59, 0x3186, 0x3186, 0xE71C, 0x7BCF, 0x0000,   // 0x0160 (352) pixels
  0xEF7D, 0x528A, 0x0000, 0x0020, 0x5ACB, 0xEF7D, 0xFFDF, 0xB5B6, 0x10A2, 0x0000, 0x0000, 0xC618, 0x6B4D, 0x0000, 0x10A2, 0x7BCF,   // 0x0170 (368) pixels
  0xD69A, 0x4228, 0x3186, 0xE73C, 0x7BCF, 0x0000, 0xEF7D, 0x528A, 0x0000, 0x3186, 0xB5B6, 0xFFFF, 0xFFFF, 0xE73C, 0x7BCF, 0x0000,   // 0x0180 (384) pixels
  0x0000, 0xC618, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228, 0x31A6, 0xEF5D, 0x7BCF, 0x0000, 0xEF7D, 0x528A, 0x1082, 0x73AE,   // 0x0190 (400) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xCE59, 0x2965, 0x0000, 0xC618, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228, 0x31A6, 0xEF5D,   // 0x01A0 (416) pixels
  0x7BEF, 0x0000, 0xEF7D, 0x528A, 0x4228, 0xD6BA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF79E, 0x9CF3, 0x0020, 0xC618, 0x6B4D, 0x0000,   // 0x01B0 (432) pixels
  0x1082, 0x73AE, 0xD69A, 0x4228, 0x3186, 0xE71C, 0x8C71, 0x0000, 0xEF7D, 0x6B4D, 0x0861, 0x528A, 0xC618, 0xFFFF, 0xFFFF, 0xEF5D,   // 0x01C0 (448) pixels
  0x738E, 0x0861, 0x39C7, 0xC618, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228, 0x2945, 0xD69A, 0xAD55, 0x0000, 0xEF7D, 0x8430,   // 0x01D0 (464) pixels
  0x0020, 0x0000, 0x10A2, 0x2124, 0x39E7, 0x0861, 0x10A2, 0x0000, 0x1082, 0xC618, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228,   // 0x01E0 (480) pixels
  0x2124, 0xBDD7, 0xC638, 0x0000, 0xEF7D, 0x5AEB, 0x4228, 0x0861, 0x0000, 0x0000, 0x0020, 0x0000, 0x0020, 0x31A6, 0x2945, 0xBDF7,   // 0x01F0 (496) pixels
  0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228, 0x18E3, 0x9CF3, 0xDEFB, 0x1082, 0xEF7D, 0x6B4D, 0x6B6D, 0x6B4D, 0x2124, 0x0841,   // 0x0200 (512) pixels
  0x0000, 0x18C3, 0x5ACB, 0x8410, 0x4208, 0xBDF7, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4208, 0x10A2, 0x7BCF, 0xE73C, 0x3186,   // 0x0210 (528) pixels
  0xEF7D, 0x52AA, 0x4228, 0xBDF7, 0xAD75, 0x31A6, 0x0841, 0x7BEF, 0xCE79, 0x7BEF, 0x0020, 0xBDF7, 0x6B4D, 0x0000, 0x1082, 0x73AE,   // 0x0220 (544) pixels
  0xD69A, 0x4208, 0x0841, 0x5ACB, 0xEF5D, 0x52AA, 0xEF7D, 0x528A, 0x0861, 0x6B4D, 0xEF5D, 0xE73C, 0xDEFB, 0xEF7D, 0xAD75, 0x10A2,   // 0x0230 (560) pixels
  0x0000, 0xBDF7, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4208, 0x0020, 0x39C7, 0xEF7D, 0x7BCF, 0xEF7D, 0x528A, 0x0000, 0x2104,   // 0x0240 (576) pixels
  0x94B2, 0xFFFF, 0xFFFF, 0xCE59, 0x39C7, 0x0000, 0x0000, 0xBDF7, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4208, 0x0000, 0x2124,   // 0x0250 (592) pixels
  0xDEFB, 0xA514, 0xEF7D, 0x5AEB, 0x0000, 0x0020, 0x39E7, 0xC618, 0xDEFB, 0x6B6D, 0x0020, 0x0000, 0x0000, 0xCE59, 0x6B4D, 0x0000,   // 0x0260 (608) pixels
  0x1082, 0x73AE, 0xD69A, 0x4208, 0x0000, 0x18E3, 0xBDF7, 0xC618, 0xEF7D, 0xC638, 0x1082, 0x0000, 0x0841, 0x4A69, 0x8410, 0x1082,   // 0x0270 (624) pixels
  0x0000, 0x0000, 0x632C, 0xDEFB, 0x6B4D, 0x0000, 0x1082, 0x73AE, 0xD69A, 0x4228, 0x0000, 0x18E3, 0xAD75, 0xE71C, 0xEF7D, 0xFFFF,   // 0x0280 (640) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xDEFB, 0x6B4D, 0x0000, 0x0841, 0x630C, 0xDEFB, 0x7BCF,   // 0x0290 (656) pixels
  0x1082, 0x39E7, 0xDEFB, 0xD69A, 0xEF5D, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xDEFB,   // 0x02A0 (672) pixels
  0x6B4D, 0x0000, 0x0000, 0x39C7, 0xC638, 0xF79E, 0xD69A, 0xEF5D, 0xEF5D, 0x6B4D, 0xAD55, 0xBDD7, 0xBDF7, 0xC618, 0xC638, 0xCE79,   // 0x02B0 (688) pixels
  0xD69A, 0xD6BA, 0xDEDB, 0xDEFB, 0xE71C, 0xC638, 0x5AEB, 0x0000, 0x0000, 0x0020, 0x39C7, 0xBDD7, 0xF79E, 0xD69A, 0x630C, 0x0000,   // 0x02C0 (704) pixels
};


// GREEN INDICATOR LIGHT
uint16_t static gweiGreen[] = {
  0x0000, 0x0000, 0x0060, 0x0140, 0x0200, 0x02A0, 0x02C0, 0x02A0, 0x0200, 0x0140, 0x0060, 0x0000, 0x0000, 0x0000, 0x0080, 0x01E0,   // 0x0010 (16) pixels
  0x0360, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x0360, 0x01E0, 0x0080, 0x0000, 0x0060, 0x01E0, 0x03A0, 0x03C0, 0x03C0, 0x03C0,   // 0x0020 (32) pixels
  0x03C0, 0x03C0, 0x1422, 0x2CA5, 0x1402, 0x01E0, 0x0060, 0x0140, 0x0360, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x0C01, 0x656C,   // 0x0030 (48) pixels
  0xCF39, 0x554A, 0x0BA1, 0x0140, 0x0200, 0x03C0, 0x03C0, 0x03E0, 0x03C0, 0x03C0, 0x0BE1, 0x5D4B, 0xE79C, 0xF7DE, 0x8E31, 0x2464,   // 0x0040 (64) pixels
  0x0200, 0x02A0, 0x03C0, 0x03E0, 0x1422, 0x03E0, 0x03E0, 0x4D29, 0xEFBD, 0xFFFF, 0xA694, 0x2464, 0x03C0, 0x02A0, 0x02C0, 0x0C01,   // 0x0050 (80) pixels
  0x552A, 0xCF39, 0x5D6B, 0x4D09, 0xF7DE, 0xFFFF, 0xAEB5, 0x1C43, 0x03C0, 0x03C0, 0x02C0, 0x02A0, 0x1C63, 0x8E31, 0xFFFF, 0xF7DE,   // 0x0060 (96) pixels
  0xEFBD, 0xFFFF, 0xAEB5, 0x1C63, 0x03E0, 0x03C0, 0x03C0, 0x02A0, 0x0200, 0x03E0, 0x2C85, 0xA694, 0xFFFF, 0xFFFF, 0xB6D6, 0x2464,   // 0x0070 (112) pixels
  0x03E0, 0x03C0, 0x03C0, 0x03C0, 0x0200, 0x0140, 0x0360, 0x03E0, 0x2CA5, 0xA694, 0xB6D6, 0x2464, 0x03E0, 0x03C0, 0x03C0, 0x03C0,   // 0x0080 (128) pixels
  0x0360, 0x0140, 0x0060, 0x01E0, 0x03A0, 0x03E0, 0x2464, 0x2C85, 0x03E0, 0x03C0, 0x03C0, 0x03C0, 0x03A0, 0x01E0, 0x0060, 0x0000,   // 0x0090 (144) pixels
  0x0080, 0x01E0, 0x0360, 0x03C0, 0x03E0, 0x03C0, 0x03C0, 0x03C0, 0x0360, 0x01E0, 0x0080, 0x0000, 0x0000, 0x0000, 0x0060, 0x0140,   // 0x00A0 (160) pixels
};

// YELLOW INDICATOR LIGHT
uint16_t static gweiYellow[] = {
  0x0000, 0x0000, 0x0020, 0x52A0, 0xAD60, 0xE720, 0xFFC0, 0xE720, 0xAD60, 0x52A0, 0x0020, 0x0000, 0x0000, 0x0000, 0x10A0, 0x9CE0,   // 0x0010 (16) pixels
  0xE700, 0xF7A0, 0xFFE0, 0xFFE0, 0xFFE0, 0xF7A0, 0xE700, 0x9CE0, 0x10A0, 0x0000, 0x0020, 0x9CE0, 0xEF40, 0xFFE0, 0xFFE0, 0xFFE0,   // 0x0020 (32) pixels
  0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xEF40, 0x9CE0, 0x0020, 0x52A0, 0xE700, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0,   // 0x0030 (48) pixels
  0xFFE0, 0xFFE0, 0xE700, 0x52A0, 0xAD60, 0xF7A0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xF7A0,   // 0x0040 (64) pixels
  0xAD60, 0xE720, 0xFFE0, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0xFFE0, 0xE720, 0xFFC0, 0xFFE0,   // 0x0050 (80) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFE0, 0xFFC0, 0xE720, 0xFFE0, 0x0840, 0x0000, 0x0000,   // 0x0060 (96) pixels
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0xFFE0, 0xE720, 0xAD60, 0xF7A0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0,   // 0x0070 (112) pixels
  0xFFE0, 0xFFE0, 0xFFE0, 0xF7A0, 0xAD60, 0x5AC0, 0xE700, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0,   // 0x0080 (128) pixels
  0xE700, 0x5AC0, 0x0020, 0xA500, 0xEF40, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xFFE0, 0xEF40, 0xA500, 0x0020, 0x0000,   // 0x0090 (144) pixels
  0x18C0, 0xA500, 0xE700, 0xF7A0, 0xFFE0, 0xFFE0, 0xFFE0, 0xF7A0, 0xE700, 0xA500, 0x18C0, 0x0000, 0x0000, 0x0000, 0x0840, 0x5AE0,   // 0x00A0 (160) pixels
};


// RED INDICATOR LIGHT
uint16_t static gweiRed[] = {
  0x0000, 0x0000, 0x0000, 0x4000, 0xA800, 0xE800, 0xF800, 0xE800, 0xA800, 0x4000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9800,   // 0x0010 (16) pixels
  0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x9800, 0x0000, 0x0000, 0x0000, 0x9800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0020 (32) pixels
  0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x9800, 0x0000, 0x4000, 0xF800, 0xF800, 0xF861, 0xFC10, 0xF861, 0xF800, 0xF882, 0xFC10,   // 0x0030 (48) pixels
  0xF841, 0xF800, 0xF800, 0x4000, 0xA800, 0xF800, 0xF800, 0xFD55, 0xFFFF, 0xFE18, 0xF8E3, 0xFE59, 0xFFFF, 0xFCF3, 0xF800, 0xF800,   // 0x0040 (64) pixels
  0xA800, 0xE800, 0xF800, 0xF800, 0xF9E7, 0xFF9E, 0xFFFF, 0xFFDF, 0xFFFF, 0xFF7D, 0xF9A6, 0xF800, 0xF800, 0xE800, 0xF800, 0xF800,   // 0x0050 (80) pixels
  0xF800, 0xF800, 0xFA69, 0xFFFF, 0xFFFF, 0xFFFF, 0xFA08, 0xF800, 0xF800, 0xF800, 0xF800, 0xE800, 0xF800, 0xF800, 0xF882, 0xFE59,   // 0x0060 (96) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFE18, 0xF861, 0xF800, 0xF800, 0xE800, 0xA800, 0xF800, 0xF800, 0xFD75, 0xFFFF, 0xFF7D, 0xFB4D, 0xFF9E,   // 0x0070 (112) pixels
  0xFFFF, 0xFD14, 0xF800, 0xF800, 0xA800, 0x4000, 0xF800, 0xF800, 0xF9C7, 0xFEBA, 0xF9A6, 0xF800, 0xF9E7, 0xFEBA, 0xF986, 0xF800,   // 0x0080 (128) pixels
  0xF800, 0x4000, 0x0000, 0x9800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x9800, 0x0000, 0x0000,   // 0x0090 (144) pixels
  0x0000, 0x9800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x9800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4000,   // 0x00A0 (160) pixels
};


// GLOBAL CONSTANTS
#define DATA_FETCH_INTERVAL 15000
#define UPDATE_CHECK_INTERVAL 120000 //600000 // Updates checked every 10 minutes
#define GWEITHRESHOLD 120000
#define SCREEN_SWITCH_INTERVAL 5000
int MAX_SCREENS = MAXCOINS + 1;

// GLOBAL DYNAMIC VARIABLES
unsigned long greenCounter = 0;
unsigned long yellowCounter = 0;
unsigned long redCounter = 0;
unsigned long lastDataFetch = 0;
unsigned long lastScreenSwitch = 0;
unsigned long lastUpdateCheck = 0;
unsigned long debounce;
boolean isGreen = false;
boolean isYellow = false;
boolean isRed = false;
boolean displayOn = true;
boolean debounced = false;
String mainJson;
String standardGwei;
float coinPrices[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
float coinChanges[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
String request_key;
int currentScreen = 0;
WiFiClient wifiClient;
void drawScreen(uint16_t screen[], int imgWidth, int imgHeight, int x, int y)
{
  int counter = 0;
  for (int yy = 0 + y; yy < imgHeight + y; yy++)
  {
    for (int xx = 0 + x; xx < imgWidth + x; xx++)
    {
      display.drawPixel(xx, yy, screen[counter]);
      counter++;
    }
  }
}
void setup()
{
  WiFi.mode(WIFI_STA);
  pinMode(1, INPUT_PULLUP);
  pinMode(3, OUTPUT);
  digitalWrite(3, LOW);
  delay(10);
  //wm.resetSettings();
  wm.setCustomHeadElement("<h1>WIFI Setup</h1>");
  std::vector<const char *> menu = {"wifi"};
  wm.setMenu(menu);
  display.begin(16);
  display.clearDisplay();
  display_update_enable(true);
  display.setTextColor(myWHITE);
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.setRotation(0);
  display.print("CONNECT TO");
  display.setCursor(0, 12);
  display.print("GASTRACKER");
  display.setCursor(0, 25);
  display.print("WIFI");

  bool res;
  res = wm.autoConnect("Gas-Tracker", "tothemoon"); // password protected ap

  if (!res) {
    ESP.restart();
  }
  else {
    display.clearDisplay();
    display.setCursor(0, 0);
    display.print("WIFI SETUP");
    display.setCursor(0, 12);
    display.print("COMPLETE!");
    display.setCursor(0, 25);
    display.print("STARTING...");
  }
  provisionAPI();
  request_key = requestKey();
  fetchData();
  extractData(coinPrices, coinChanges, coinArguments, standardGwei, mainJson);
  //checkUpdate(FIRMWARE_VERSION);
  lastDataFetch = millis();
  lastUpdateCheck = millis();
}


void loop()
{
  if (millis() - lastUpdateCheck >= UPDATE_CHECK_INTERVAL) {
    //display.clearDisplay();
    checkUpdate(FIRMWARE_VERSION);
    lastUpdateCheck = millis();
  }

  // Fetch Data
  if (millis() - lastDataFetch >= DATA_FETCH_INTERVAL) {
    fetchData();
    extractData(coinPrices, coinChanges, coinArguments, standardGwei, mainJson);
    lastDataFetch = millis();
  }

  if (millis() - lastScreenSwitch >= SCREEN_SWITCH_INTERVAL && displayOn) {
    currentScreen ++;
    if (currentScreen + 1 > MAX_SCREENS)
      currentScreen = 0;
    displayScreens();
    lastScreenSwitch = millis();
  }
  if (digitalRead(1) == LOW && debounced) {
    displayOn = !displayOn;
    if (!displayOn)
      display.clearDisplay();
    else {
      displayScreens();
    }
    debounce = millis();
    debounced = false;
  }
  if (digitalRead(1) == HIGH && millis() - debounce > 500) {
    debounced = true;
  }
}

void displayScreens() {
  switch (currentScreen) {
    case 0:
      if (standardGwei != "")
        displayGwei();
      break;
    case 1:
      if (coinPrices[0] > 0)
        displayCoins(coinTickers[0], coin1, coinPrices[0], coinChanges[0]);
      break;
    case 2:
      if (coinPrices[1] > 0)
        displayCoins(coinTickers[1], coin2, coinPrices[1], coinChanges[1]);
      break;
    case 3:
      if (coinPrices[2] > 0)
        displayCoins(coinTickers[2], coin3, coinPrices[2], coinChanges[2]);
      break;
    case 4:
      if (coinPrices[3] > 0)
        displayCoins(coinTickers[3], coin4, coinPrices[3], coinChanges[3]);
      break;
    case 5:
      if (coinPrices[4] > 0)
        displayCoins(coinTickers[4], coin5, coinPrices[4], coinChanges[4]);
      break;
    case 6:
      if (coinPrices[5] > 0)
        displayCoins(coinTickers[5], coin6, coinPrices[5], coinChanges[5]);
      break;
    case 7:
      if (coinPrices[6] > 0)
        displayCoins(coinTickers[6], coin7, coinPrices[6], coinChanges[6]);
      break;
    case 8:
      if (coinPrices[7] > 0)
        displayCoins(coinTickers[7], coin8, coinPrices[7], coinChanges[7]);
      break;
    case 9:
      if (coinPrices[8] > 0)
        displayCoins(coinTickers[8], coin9, coinPrices[8], coinChanges[8]);
      break;
    case 10:
      if (coinPrices[9] > 0)
        displayCoins(coinTickers[9], coin10, coinPrices[9], coinChanges[9]);
      break;
  }
}
void fetchData() {
  if (WiFi.status() == WL_CONNECTED)
  {
    HTTPClient http;
    String coinString = "?";
    for (int i = 0; i < MAXCOINS; i++) {
      coinString += "coin" + String(i) + "=" + coinArguments[i] + "&";
    }
    http.begin(wifiClient, api() + coinString);
    addHeaders(http);
    int httpCode = http.GET();
    if (httpCode == 200)
      mainJson = http.getString();
    else if (httpCode == 403) {
      display.clearDisplay();
      mainJson = "";
    }
    http.end();
  }
}

void displayCoins(String ticker, uint16_t screen[], float price, float change) {
  display.clearDisplay();
  drawScreen(screen, 22, 32, 42, 0);
  display.setTextColor(myWHITE);
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.setRotation(0);
  display.print(ticker);
  display.setCursor(0, 12);
  if (change >= 0) {
    display.setTextColor(myGREEN);
    display.print("+");
  }
  else
    display.setTextColor(myRED);
  display.print(change);
  display.print("%");
  display.setCursor(0, 25);
  display.setTextColor(myGREEN);
  display.print("$");
  display.print(price);
}

void displayGwei() {
  display.clearDisplay();
  drawScreen(gwei, 22, 32, 42, 0);
  String standardString = standardGwei;
  String decimalString;
  if (standardString.length() < 12) {
    decimalString = standardString.substring(2, 4);
    standardString = standardString.substring(0, 2);
  }
  else {
    decimalString = standardString.substring(3, 5);
    standardString = standardString.substring(0, 3);
  }
  int gweiInt = standardString.toInt();
  if (gweiInt < 90) {
    display.setTextColor(myGREEN);
    if (!isGreen)
      greenCounter = millis();
    isGreen = true;
    isYellow = false;
    isRed = false;
  }
  else if (gweiInt > 90 && gweiInt < 110) {
    display.setTextColor(myYELLOW);
    if (!isYellow)
      yellowCounter = millis();
    isYellow = true;
    isGreen = false;
    isRed = false;
  }
  else if (gweiInt > 110) {
    display.setTextColor(myRED);
    if (!isRed)
      redCounter = millis();
    isRed = true;
    isGreen = false;
    isYellow = false;
  }
  if (millis() - greenCounter > GWEITHRESHOLD && isGreen) {
    drawScreen(gweiGreen, 13, 12, 27, 11);
  }
  else if (millis() - yellowCounter > GWEITHRESHOLD && isYellow) {
    drawScreen(gweiYellow, 13, 12, 27, 11);
  }
  else if (millis() - redCounter > GWEITHRESHOLD && isRed) {
    drawScreen(gweiRed, 13, 12, 27, 11);
  }
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.setRotation(0);
  display.print("CURRENT");
  display.setCursor(0, 10);
  display.print("GWEI");
  display.setCursor(0, 25);
  display.print(standardString + '.' + decimalString);
}

String getParam(String name) {
  String value;
  if (wm.server->hasArg(name)) {
    value = wm.server->arg(name);
  }
  return value;
}
